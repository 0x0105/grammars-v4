name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#         java: [11, 12 ]
#       fail-fast: false
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK
#       uses: actions/setup-java@v1
#       with:
#         java-version: ${{ matrix.java }}
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#   build-csharp:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#     steps:
#     - uses: actions/checkout@v2
#     - name: Test C# target
#       run: |
#         bash _scripts/regtest.sh CSharp
#   build-csharp-pwsh-problem-child:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest]
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#       with:
#         fetch-depth: 0
#     - name: Test C# target with PowerShell
#       shell: pwsh
#       run: |
#         if ("${{ github.event_name }}" -eq "pull_request") {
#             $Before = "${{ github.event.pull_request.base.sha }}"
#             $After = "${{ github.event.pull_request.head.sha }}"
#         }
#         else {
#             $Before = "${{ github.event.before }}"
#             $After = "${{ github.event.after }}"
#         }
#         dotnet tool install -g dotnet-antlr --version 3.0.6
#         _scripts/test.ps1 CSharp $Before $After
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        language: [CSharp, Java, JavaScript, Go, Python3, Dart]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Install Dart
      if: ${{ matrix.language == 'Dart' }}
      uses: dart-lang/setup-dart@v1
    - name: Install Python
      if: ${{ matrix.language == 'Python3' }}
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: Download ANTLR
      shell: pwsh
      run: |
        Invoke-WebRequest https://www.antlr.org/download/antlr-4.9.1-complete.jar -OutFile antlr-4.9.1-complete.jar
        $antlrPath=Resolve-Path antlr-4.9.1-complete.jar
        echo "antlr_path=$antlrPath" >> $env:GITHUB_ENV

    - name: Download ANTLR
      shell: pwsh
      run: |
        Invoke-WebRequest https://www.antlr.org/download/antlr-4.9.1-complete.jar -OutFile antlr-4.9.1-complete.jar
        $antlrPath=Resolve-Path antlr-4.9.1-complete.jar
        echo "antlr_path=$antlrPath" >> $env:GITHUB_ENV
    - name: Install dotnet-antlr
      shell: pwsh
      run: dotnet tool install -g dotnet-antlr --version 3.0.6
    - name: Test
      shell: pwsh
      run: |
        if ("${{ github.event_name }}" -eq "pull_request") {
            $Before = "${{ github.event.pull_request.base.sha }}"
            $After = "${{ github.event.pull_request.head.sha }}"
        }
        else {
            $Before = "${{ github.event.before }}"
            $After = "${{ github.event.after }}"
        }
        $env:ANTLR_JAR_PATH="${{ env.antlr_path }}"
        _scripts/test.ps1 ${{ matrix.language }} $Before $After
